library(backports)
detach("package:backports", unload = TRUE)
library(plotly)
help("plotly")
x <- 5
text <- "This is RStudio"
today <- Sys.Date()
library(blob)
library(plotly)
help(dplyr)
help("read.csv2")
print("Hello World")
print("Hello World")
# Variable declaration
x <- 10
str <- "This is string"
timeNow <- Sys.time()
x
timeNow
x+y
y <- 5
x+y
print("Hello World")
print("Hello World")
print("Hello World")
## Numeric
x <- 5
y <- 7
x + y
## String / Characters
str <- "This is string"
## Date and time
timeNow <- Sys.time()
dateNow <- Sys.Date()
## Code in section 1
## Code in section 1
## Code in section 1
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(dplyr)
detach("package:dplyr", unload = TRUE)
x <- 5
y <- 10
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
x <- 11
y <- 10
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
# Declare Some Variables
x <- 5
y <- 10
# If Statement
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
# Declare Some Variables
x <- 15
y <- 10
# If Statement
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
x <- 5
for (i in 1:x){
print(i)
}
x <- 10
for (i in 1:x){
print(i)
}
for (i in 1:x){
print(i)
print("Hello World")
}
# Variable Declarations
x <- 10
# Iterate For Statement
for (i in 1:x){
print(i)
print("Hello World")
}
# Variable Declarations
x <- 5
# Iterate For Statement
for (i in 1:x){
print(i)
print("Hello World")
}
text1 <- "Good"
text2 <- "Morning"
text3 <- "Friends"
text4 <- paste(text1,text2,text3,sep=" ")
print(text4)
text5 <- paste0(text1,text2,text3)
print(text5)
text6 <- paste0(text1," ",text2," ",text3)
print(text6)
# Variable declarations
text1 <- "Good"
text2 <- "Morning"
text3 <- "Friends"
# Using paste
text4 <- paste(text1,text2,text3,sep = " ")
print(text4)
# Using paste0
text5 <- paste0(text1,text2,text3)
print(text5)
# Using paste0 --> with separator
text6 <- paste0(text1," ",text2," ",text3)
print(text6)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/23. Data Frame Manipulation")
## Import the data
fname <- "job_listing_23.csv"
raw_data <- read.csv(fname, sep=";")
View(raw_data)
## Import the data
fname <- "job_listing_23.csv"
raw_data <- read.csv(fname, sep=",")
View(raw_data)
## SELECT
select_df <- raw_data %>% select(id,Title,Location)
library(dplyr)
## SELECT
select_df <- raw_data %>% select(id,Title,Location)
## SELECT
select_df <- raw_data %>% select(Id,Title,Location)
View(select_df)
select_df <- raw_data %>% select(2,3,4)
View(select_df)
## FILTER
filter_df <- raw_data %>% filter(Title != "")
View(filter_df)
filter_df <- raw_data %>% filter(Location == "Glasgow")
View(filter_df)
?rename
## RENAME
rename_df <- raw_data %>% rename(`Job Title` = Title)
View(rename_df)
## MUTATE
mutate_df <- raw_data %>% mutate(Deadline = as.Date(CloseDate,format="%Y%m%d"))
View(mutate_df)
## Compounded Function
compound_df <- raw_data %>% select(Id,Title,Location,CloseDate) %>% filter(Title != "") %>% filter(Location == "London") %>%
rename(`Job Title` =  Title) %>% mutate(Deadline = as.Date(CloseDate,format="%Y%m%d"))
View(compound_df)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/23. Data Frame Manipulation")
library(dplyr)
## Import the data
fname <- "job_listing_23.csv"
raw_data <- read.csv(fname,sep=",")
View(raw_data)
## SELECT
colnames(raw_data)
select_df <- raw_data %>% select(Id,Title,Location,CloseDate)
View(select_df)
select_df <- raw_data %>% select(2,3,4)
View(select_df)
## FILTER
filter_df <- raw_data %>% filter(Title != "")
View(filter_df)
filter_df <- raw_data %>% filter(Location == "Glasgow")
View(filter_df)
## RENAME
rename_df <- raw_data %>% rename(`Job Title` = Title)
View(rename_df)
## MUTATE
mutate_df <- raw_df %>% mutate(Deadline = as.Date(CloseDate,format="%Y%m%d"))
View(mutate_df)
## MUTATE
mutate_df <- raw_df %>% mutate(Deadline = as.Date(CloseDate,format="%Y%m%d"))
## MUTATE
mutate_df <- raw_data %>% mutate(Deadline = as.Date(CloseDate,format="%Y%m%d"))
View(mutate_df)
## Compounded Function
compound_df <- raw_data %>% select(Id,Title,Location,CloseDate) %>% filter(Title != "") %>% filter(Location == "London") %>%
rename(`Job Title` = Title) %>% mutate(Deadline = as.Date(CloseDate,format="%Y%m%d"))
View(compound_df)
