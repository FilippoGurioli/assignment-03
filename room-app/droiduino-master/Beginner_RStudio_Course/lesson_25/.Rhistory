library(backports)
detach("package:backports", unload = TRUE)
library(plotly)
help("plotly")
x <- 5
text <- "This is RStudio"
today <- Sys.Date()
library(blob)
library(plotly)
help(dplyr)
help("read.csv2")
print("Hello World")
print("Hello World")
# Variable declaration
x <- 10
str <- "This is string"
timeNow <- Sys.time()
x
timeNow
x+y
y <- 5
x+y
print("Hello World")
print("Hello World")
print("Hello World")
## Numeric
x <- 5
y <- 7
x + y
## String / Characters
str <- "This is string"
## Date and time
timeNow <- Sys.time()
dateNow <- Sys.Date()
## Code in section 1
## Code in section 1
## Code in section 1
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(dplyr)
detach("package:dplyr", unload = TRUE)
x <- 5
y <- 10
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
x <- 11
y <- 10
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
# Declare Some Variables
x <- 5
y <- 10
# If Statement
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
# Declare Some Variables
x <- 15
y <- 10
# If Statement
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
x <- 5
for (i in 1:x){
print(i)
}
x <- 10
for (i in 1:x){
print(i)
}
for (i in 1:x){
print(i)
print("Hello World")
}
# Variable Declarations
x <- 10
# Iterate For Statement
for (i in 1:x){
print(i)
print("Hello World")
}
# Variable Declarations
x <- 5
# Iterate For Statement
for (i in 1:x){
print(i)
print("Hello World")
}
text1 <- "Good"
text2 <- "Morning"
text3 <- "Friends"
text4 <- paste(text1,text2,text3,sep=" ")
print(text4)
text5 <- paste0(text1,text2,text3)
print(text5)
text6 <- paste0(text1," ",text2," ",text3)
print(text6)
# Variable declarations
text1 <- "Good"
text2 <- "Morning"
text3 <- "Friends"
# Using paste
text4 <- paste(text1,text2,text3,sep = " ")
print(text4)
# Using paste0
text5 <- paste0(text1,text2,text3)
print(text5)
# Using paste0 --> with separator
text6 <- paste0(text1," ",text2," ",text3)
print(text6)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/24. Combining Data Frames")
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/24. Combining Data Frames")
library(dplyr)
library(readxl)
# RBind
## Import data
file1 <- "salesworkload_1_rbind.xlsx"
file2 <- "salesworkload_2_rbind.xlsx"
# RBind
## Import data
file1 <- "salesworkload_1_rbind.xlsx"
file2 <- "salesworkload_2_rbind.xlsx"
df1 <- read_xlsx(file1)
df2 <- read_xlsx(file2)
View(df2)
## Combine Data
df_rbind <- rbind(df1,df2)
View(df_rbind)
## Import data
file3 <- "salesworkload_3_cbind.xlsx"
file4 <- "salesworkload_4_cbind.xlsx"
df3 <- read_xlsx(file3)
df4 <- read_xlsx(file4)
## Combine Data
df_cbind <- cbind(df3,df4)
View(df_rbind)
## Import data
file3 <- "salesworkload_3_cbind.xlsx"
file4 <- "salesworkload_4_cbind.xlsx"
df3 <- read_xlsx(file3)
## Import data
file5 <- "salesworkload_5_cbind.xlsx"
file4 <- "salesworkload_4_cbind.xlsx"
df3 <- read_xlsx(file5)
df4 <- read_xlsx(file4)
## Combine Data
df_cbind <- cbind(df5,df4)
df5 <- read_xlsx(file5)
df4 <- read_xlsx(file4)
## Combine Data
df_cbind <- cbind(df5,df4)
View(df_cbind)
## Import data
file6 <- "salesworkload_6_merge.xlsx"
file7 <- "salesworkload_7_merge.xlsx"
df6 <- read_xlsx(file6)
df7 <- read_xlsx(file7)
View(df6)
View(df7)
## Combine Data
df_merge <- merge(df6,df7, by="id")
View(df_merge)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/25. Data Aggregating")
file <- "salesworkload_25.xlsx"
df <- read_xlsx(file)
View(df)
library(dplyr)
library(readxl)
file <- "salesworkload_25.xlsx"
df <- read_xlsx(file)
View(df)
## TOTAL NUMBER OF STORE PER REGION
num_store <- df %>% group_by(Region) %>% summarise(store = n())
View(num_store)
sum(num_store$store)
## TOTAL NUMBER OF TYPES PER REGION
num_scheme <- df %>% group_by(Region,scheme) %>% summarise(scheme_num = n())
View(num_scheme)
## TOTAL NUMBER OF TYPES PER REGION
num_scheme <- df %>% group_by(Region,scheme) %>% summarise(scheme_num = n())
## TOTAL NUMBER OF TYPES PER REGION
num_scheme <- df %>% group_by(Region,Scheme) %>% summarise(scheme_num = n())
View(num_scheme)
sum(num_scheme$scheme_num)
## AGGREGATE NUMBER OF SALES PER REGION PER SCHEMES
num_sales <- df %>% group_by(Region,Scheme) %>% summarise(sales_2019 = sum(`2019`))
View(num_scheme)
View(num_sales)
## AGGREGATE NUMBER OF SALES PER REGION PER SCHEMES
# Data Cleanup
str(df)
## Aggregate Data
num_sales <- df %>% group_by(Region,Scheme) %>% summarise(sales_2019 = sum(`2019`),sales_2020 = sum(`2020`))
View(num_sales)
## Aggregate Sales Data Per Region
num_sales2 <- df %>% group_by(Region) %>% summarise(sales_2019 = sum(`2019`),sales_2020 = sum(`2020`))
View(num_sales2)
## Sanity Check
sum(num_sales$sales_2019)
sum(df$`2019`)
sum(num_sales$sales_2020)
sum(df$`2020`)
## Sanity Check
sum(num_sales2$sales_2019)
sum(num_sales2$sales_2020)
library(dplyr)
library(readxl)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/25. Data Aggregating")
## FILE IMPORT
file <- "salesworkload_25.xlsx"
df <- read_xlsx(file)
View(df)
## TOTAL NUMBER OF STORE PER REGION
num_store <- df %>% group_by(Region) %>% summarise(store = n())
View(num_store)
# Sanity check
sum(num_store$store)
## TOTAL NUMBER OF SCHEMES PER REGION
num_scheme <- df %>% group_by(Region,Scheme) %>% summarise(scheme_num = n())
View(num_scheme)
# Sanity check
sum(num_scheme$scheme_num)
## AGGREGATE NUMBER OF SALES PER REGION PER SCHEME
# Data exploration
str(df)
# Aggregate Data
num_sales <- df %>% group_by(Region,Scheme) %>% summarise(sales_2019 = sum(`2019`), sales_2020 = sum(`2020`))
View(num_sales)
# Sanity Check
sum(num_sales$sales_2019)
sum(df$`2019`)
sum(num_sales$sales_2020)
sum(df$2020)
sum(df$`2020`)
# Aggregate Sales Data (Value) per region
num_sales2 <- df %>% group_by(Region) %>% summarise(sales_2019 = sum(`2019`), sales_2020 = sum(`2020`))
View(num_sales2)
# Sanity Check
sum(num_sales2$sales_2019)
sum(num_sales2$sales_2020)
