library(backports)
detach("package:backports", unload = TRUE)
library(plotly)
help("plotly")
x <- 5
text <- "This is RStudio"
today <- Sys.Date()
library(blob)
library(plotly)
help(dplyr)
help("read.csv2")
print("Hello World")
print("Hello World")
# Variable declaration
x <- 10
str <- "This is string"
timeNow <- Sys.time()
x
timeNow
x+y
y <- 5
x+y
print("Hello World")
print("Hello World")
print("Hello World")
## Numeric
x <- 5
y <- 7
x + y
## String / Characters
str <- "This is string"
## Date and time
timeNow <- Sys.time()
dateNow <- Sys.Date()
## Code in section 1
## Code in section 1
## Code in section 1
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(dplyr)
detach("package:dplyr", unload = TRUE)
x <- 5
y <- 10
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
x <- 11
y <- 10
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
# Declare Some Variables
x <- 5
y <- 10
# If Statement
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
# Declare Some Variables
x <- 15
y <- 10
# If Statement
if (x <= y){
print("X is less than or equal to Y")
} else {
print("X is more than Y")
}
x <- 5
for (i in 1:x){
print(i)
}
x <- 10
for (i in 1:x){
print(i)
}
for (i in 1:x){
print(i)
print("Hello World")
}
# Variable Declarations
x <- 10
# Iterate For Statement
for (i in 1:x){
print(i)
print("Hello World")
}
# Variable Declarations
x <- 5
# Iterate For Statement
for (i in 1:x){
print(i)
print("Hello World")
}
text1 <- "Good"
text2 <- "Morning"
text3 <- "Friends"
text4 <- paste(text1,text2,text3,sep=" ")
print(text4)
text5 <- paste0(text1,text2,text3)
print(text5)
text6 <- paste0(text1," ",text2," ",text3)
print(text6)
# Variable declarations
text1 <- "Good"
text2 <- "Morning"
text3 <- "Friends"
# Using paste
text4 <- paste(text1,text2,text3,sep = " ")
print(text4)
# Using paste0
text5 <- paste0(text1,text2,text3)
print(text5)
# Using paste0 --> with separator
text6 <- paste0(text1," ",text2," ",text3)
print(text6)
fname <- "brazilian_real_estate.csv"
raw_data <- read.csv(fname)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/20. Cleansing Numeric Data")
fname <- "brazilian_real_estate.csv"
raw_data <- read.csv(fname)
raw_data <- read.csv(fname, sep=";")
head(raw_data)
View(raw_data)
str(raw_data)
str(raw_data)
## Identify Columns to cleanse
View(raw_data$listing.usableAreas)
## STEP 4 : Convert data to numeric
raw_data$listing.usableAreas <- as.numeric(raw_data$listing.usableAreas)
str(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.usableAreas)
sum(raw_data$listing.usableAreas)
## STEP 5 : Validate data type
typeof(raw_data$listing.usableAreas)
sum(raw_data$listing.usableAreas)
## STEP 1 : Import the data
fname <- "brazilian_real_estate.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.usableAreas)
sum(raw_data$listing.usableAreas)
## STEP 4 : Convert data to numeric
raw_data$listing.usableAreas <- as.character(as.numeric(raw_data$listing.usableAreas))
## STEP 5 : Removing NA numeric data (if Any)
raw_data[is.na(raw_data$listing.usableAreas),]
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
nrow(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.usableAreas)
str(raw_data)
nrow(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.totalAreas)
sum(raw_data$listing.totalAreas)
## STEP 4 : Convert data to numeric
raw_data$listing.totalAreas <- as.character(as.numeric(raw_data$listing.totalAreas))
## STEP 5 : Removing NA numeric data (if Any)
raw_data[is.na(raw_data$listing.totalAreas),]
## STEP 5 : Removing NA numeric data (if Any)
nrow(raw_data[is.na(raw_data$listing.totalAreas),])
View(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
?na.omit
clean_data <- na.omit(raw_data)
nrow(clean_data[is.na(clean_data$listing.totalAreas),])
## STEP 6 : Validate data
typeof(clean_data$listing.totalAreas)
sum(clean_data$listing.totalAreas)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.totalAreas)
sum(raw_data$listing.totalAreas)
## STEP 4 : Convert data to numeric
raw_data$listing.totalAreas <- as.character(as.numeric(raw_data$listing.totalAreas))
## STEP 5 : Removing NA numeric data (if Any)
nrow(raw_data[is.na(raw_data$listing.totalAreas),])
clean_data <- na.omit(raw_data)
nrow(clean_data[is.na(clean_data$listing.totalAreas),])
## STEP 6 : Validate data
typeof(clean_data$listing.totalAreas)
## STEP 5 : Removing NA numeric data (if Any)
nrow(raw_data[is.na(raw_data$listing.totalAreas),])
str(raw_data)
## STEP 4 : Convert data to numeric
raw_data$listing.totalAreas <- as.numeric(raw_data$listing.totalAreas)
## STEP 5 : Removing NA numeric data (if Any)
nrow(raw_data[is.na(raw_data$listing.totalAreas),])
clean_data <- na.omit(raw_data)
nrow(clean_data[is.na(clean_data$listing.totalAreas),])
## STEP 6 : Validate data
typeof(clean_data$listing.totalAreas)
sum(clean_data$listing.totalAreas)
View(clean_data)
summary(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
nrow(raw_data)
summary(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.totalAreas)
sum(raw_data$listing.totalAreas)
## STEP 4 : Convert data to numeric
raw_data$listing.totalAreas <- as.numeric(raw_data$listing.totalAreas)
## STEP 4 : Convert to numeric data
raw_data$listing.totalAreas <- as.numeric(raw_data$listing.totalAreas)
## STEP 5 : Removing NA numeric data (if Any)
nrow(raw_data[is.na(raw_data$listing.totalAreas),])
clean_data <- na.omit(raw_data)
nrow(clean_data[is.na(clean_data$listing.totalAreas),])
summary(clean_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
nrow(raw_data)
## STEP 2 : Inspect the data
View(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
nrow(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
nrow(raw_data)
summary(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.totalAreas)
sum(raw_data$listing.totalAreas)
## STEP 4 : Cleansing numeric data
# Remove unwanted characters
raw_data$listing.totalAreas <- gsub("m2","",raw_data$listing.totalAreas)
# Convert to numeric data
raw_data$listing.totalAreas <- as.numeric(raw_data$listing.totalAreas)
## STEP 5 : Removing NA numeric data (if Any)
nrow(raw_data[is.na(raw_data$listing.totalAreas),])
clean_data <- na.omit(raw_data)
nrow(clean_data[is.na(clean_data$listing.totalAreas),])
## STEP 6 : Validate data
typeof(clean_data$listing.totalAreas)
View(clean_data)
summary(clean_data)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/21. Date Cleansing")
## STEP 1 : Import the data
fname <- "brazilian_real_estate_21.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
nrow(raw_data)
summary(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_21.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
nrow(raw_data)
summary(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.createdAt)
## STEP 4 : Cleansing numeric data
# Date Only
raw_data$listing.createdAt <- as.Date(raw_data$listing.createdAt, format = "%Y-%m-%d")
raw_data <- read.csv(fname, sep=";")
## STEP 4 : Cleansing numeric data
# Date Only
raw_data$Date <- as.Date(raw_data$listing.createdAt, format = "%Y-%m-%d")
# Date and Time
raw_data$Datetime <- as.POSIXct(raw_data$listing.totalAreas, tz=Sys.timezone())
# Date and Time
raw_data$Datetime <- as.POSIXct(raw_data$listing.createdAt, tz=Sys.timezone())
# Date and Time
raw_data$Datetime <- as.POSIXct(raw_data$listing.createdAt,format = "%Y-%m-%dT%H:%M", tz=Sys.timezone())
# Date and Time
raw_data$Datetime <- as.POSIXct(raw_data$listing.createdAt,format = "%Y-%m-%dT%H:%M:%S", tz=Sys.timezone())
## STEP 5 : Removing NA numeric data (if Any)
clean_data <- na.omit(raw_data)
nrow(clean_data[is.na(clean_data$Date),])
## STEP 6 : Validate data
typeof(clean_data$Date)
typeof(clean_data$Datetime)
View(clean_data)
## STEP 6 : Validate data
View(clean_data)
summary(clean_data)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/22. Text Cleansing and Manipulation")
## STEP 1 : Import the data
fname <- "brazilian_real_estate_22.csv"
raw_data <- read.csv(fname, sep=";")
## STEP 2 : Inspect the data
View(raw_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_20.csv"
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/20. Cleansing Numeric Data")
raw_data <- read.csv(fname,sep = ";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
summary(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.totalAreas)
sum(raw_data$listing.totalAreas)
## STEP 4 : Cleansing numeric data
# remove unwanted chararacters
raw_data$listing.totalAreas <- gsub("m2","",raw_data$listing.totalAreas)
# Convert character to numeric
raw_data$listing.totalAreas <- as.numeric(raw_data$listing.totalAreas)
## STEP 5 : Removing NA data (if Any)
clean_data <- na.omit(raw_data)
## STEP 6 : Validate data
typeof(clean_data$listing.totalAreas)
View(clean_data)
summary(clean_data)
## STEP 1 : Import the data
fname <- "brazilian_real_estate_21.csv"
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/21. Date Cleansing")
raw_data <- read.csv(fname,sep = ";")
## STEP 2 : Inspect the data
View(raw_data)
str(raw_data)
summary(raw_data)
## STEP 3 : Identify Columns to cleanse
typeof(raw_data$listing.createdAt)
## STEP 4 : Cleansing numeric data
# Date Only
raw_data$Date <- as.Date(raw_data$listing.createdAt,format = "%Y-%m-%d")
# Date and Time
raw_data$Datetime <- as.POSIXct(raw_data$listing.createdAt,format = "%Y-%m-%dT%H:%M:%S", tz=Sys.timezone())
## STEP 5 : Removing NA numeric data (if Any)
clean_data <- na.omit(raw_data)
## STEP 6 : Validate data
View(clean_data)
summary(clean_data)
