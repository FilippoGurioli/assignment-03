library(plotly)
library(dplyr)
library(readxl)
library(plotly)
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/26. Data Visualization Using Plotly")
file <- "salesworkload_master.xlsx"
df <- read_xlsx(file)
View(df)
?cast
library(reshape2)
?cast
?melt
df_reshape <- df %>% melt("value")
df_reshape <- df %>% melt(c("id"))
View(df_reshape)
df_reshape <- df %>% melt(c("id","Store name","Region","Scheme"))
View(df_reshape)
df_reshape <- df_reshape %>% rename(period = variable, sales = value)
library(writexl)
write_xlsx(df_reshape,"salesworkload_tabular.xlsx")
## Importing Data
file <- "salesworkload_tabular.xlsx"
df <- read_xlsx(file)
View(df)
## Simple Barchart : Sales for UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,period) %>% summarise(total_sales = sum(sales))
View(df_uk)
# Plotting
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales)
plot
# Line Chart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "line")
plot
# Line Chart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, mode = "lines")
plot
# Line Chart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "scatter",mode = "lines")
plot
## Stacked Barchart : Sales by Type in UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,Scheme,period) %>% summarise(total_sales = sum(sales))
View(df_uk)
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$)
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$Scheme)
plot
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$Scheme, type = "stacked")
plot
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$Scheme, type = "stack")
plot
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$Scheme, barmode = "stack")
plot
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$Scheme, barmode = "stacked")
plot
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$Scheme) %>% layout(barmode = "stack")
plot
## Stacked Barchart : Sales by Store in UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,`Store name`,period) %>% summarise(total_sales = sum(sales))
View(df_uk)
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$`Store name`) %>% layout(barmode = "stack")
plot
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/27. Data Visualization Using Plotly - Part 2")
library(dplyr)
library(readxl)
library(plotly)
## Importing Data
file <- "salesworkload_tabular.xlsx"
df <- read_xlsx(file)
View(df)
str(df_uk)
str_df
str(df)
## Vertical Barchart : Sales per Country in 2010
# Data Aggregation
df_sales <- df %>% filter(period == "2010") %>% group_by(Region) %>% summarise(total_sales = sum(sales))
View(df_sales)
# Plotting Barchart
plot <- plot_ly(df_sales, x = df_uk$Region, y = df_uk$total_sales) %>% layout(orientation = "v")
# Plotting Barchart
plot <- plot_ly(df_sales, x = df_sales$Region, y = df_sales$total_sales) %>% layout(orientation = "v")
plot
## Horizontal Barchart : Sales per Country in 2010
# Data Aggregation
df_sales <- df %>% filter(period == "2010") %>% group_by(Region) %>% summarise(total_sales = sum(sales))
View(df_sales)
# Plotting Barchart
plot <- plot_ly(df_sales, x = df_sales$Region, y = df_sales$total_sales) %>% layout(orientation = "h")
plot
# Plotting Barchart
plot <- plot_ly(df_sales, y = df_sales$Region, x = df_sales$total_sales) %>% layout(orientation = "h")
plot
# Plotting Barchart
plot <- plot_ly(df_sales, x = df_sales$total_sales, y = df_sales$Region, ) %>% layout(orientation = "h")
plot
# Plotting Barchart
plot <- plot_ly(df_sales, x = df_sales$total_sales, y = df_sales$Region, ) %>% layout(orientation = "h")
plot
# Plotting Barchart
plot <- plot_ly(df_sales, x = df_sales$total_sales, y = df_sales$Region ) %>% layout(orientation = "h")
plot
# Plotting Barchart
plot <- plot_ly(df_sales, x = df_sales$total_sales, y = df_sales$Region,type = "bar" ) %>% layout(orientation = "h")
plot
# Plotting Barchart
plot <- plot_ly(df_sales, x = df_sales$total_sales, y = df_sales$Region,type = "bar",orientation = "h")
plot
## Histogram : Sales Profile in UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,`Store name`,period) %>% summarise(total_sales = sum(sales))
View(df_uk)
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$total_sales, type = "hist")
plot
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$total_sales, type = "histogram")
plot
## Histogram : Sales Profile in UK in 2011
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom" && period == "2011") %>% group_by(Region,`Store name`) %>%
summarise(total_sales = sum(sales))
View(df_uk)
## Histogram : Sales Profile in UK in 2011
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% filter(period == "2011") %>% group_by(Region,`Store name`) %>%
summarise(total_sales = sum(sales))
View(df_uk)
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$total_sales, type = "histogram")
plot
## Histogram : Sales Profile in UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,`Store name`) %>% summarise(total_sales = sum(sales))
View(df_uk)
## Histogram : Sales Profile in UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,`Store name`)
View(df_uk)
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$sales, type = "histogram")
plot
## Histogram : Sales Profile in UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% filter(period == "2011") %>% group_by(Region,`Store name`)
View(df_uk)
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$sales, type = "histogram")
plot
## Histogram : Sales Profile in UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,`Store name`)
View(df_uk)
# Plotting Barchart
plot <- plot_ly(df_uk, x = df_uk$sales, type = "histogram")
plot
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/28. Data Visualization Using Plotly - Part 3")
library(dplyr)
library(readxl)
library(plotly)
## Importing Data
file <- "salesworkload_tabular.xlsx"
df <- read_xlsx(file)
View(df)
library(dplyr)
library(readxl)
library(plotly)
## Importing Data
file <- "salesworkload_tabular.xlsx"
df <- read_xlsx(file)
View(df)
## Plotting Stacked Barchart
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,period) %>% summarise(total_sales = sum(sales))
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales)
plot
## Plotting Stacked Barchart
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,`Store name`,period) %>% summarise(total_sales = sum(sales))
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, name = df_uk$`Store name`) %>% layout(barmode = "stack")
plot
# Hide Legends
plot_legend <- plot %>% layout(showlegend = FALSE)
plot_legend
# Changing Legend Orientation
plot_legend <- plot %>% layout(legend = list(orientation = "h"))
plot_legend
# Changing Legend Orientation
plot_legend <- plot %>% layout(legend = list(orientation = "h"))
plot_legend
# Legend Title
plot_legend <- plot %>% layout(legend = list(orientation = "h",title = "Store Name"))
plot_legend
# Legend Title
plot_legend <- plot %>% layout(legend = list(orientation = "h",title = list(text = "Store Name")))
plot_legend
# Legend Title
plot_legend <- plot %>% layout(legend = list(orientation = "v",title = list(text = "Store Name")))
plot_legend
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/26. Data Visualization Using Plotly - Part 1")
library(dplyr)
library(readxl)
library(plotly)
## Importing Data
file <- "salesworkload_tabular.xlsx"
df <- read_xlsx(file)
View(df)
## Simple Barchart : Sales for UK
# Data Aggregation
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,period) %>% summarise(total_sales = sum(sales))
View(df_uk)
# Scatter Plot
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "scatter")
plot
# Bar Chart
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales)
plot
# Scatter Plot
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "scatter")
plot
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/28. Data Visualization Using Plotly - Part 3")
# Scatter Plot : UK Sales for 2009-2019
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,period) %>% summarise(total_sales = sum(sales))
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "scatter")
plot
# Add Text
plot <- plot %>% plot_ly(text = df_uk$total_sales) %>% add_text(textposition = "top right")
# Add Text
plot <- plot %>% add_text(textposition = "top right")
# Scatter Plot : UK Sales for 2009-2019
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,period) %>% summarise(total_sales = sum(sales))
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "scatter",text = df_uk$total_sales)
plot
# Add Text
plot <- plot %>% add_text(textposition = "top right")
plot
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "scatter")
plot
# Add Text
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "scatter", text = df_uk$total_sales) %>%
add_text(textposition = "top right") %>% layout(showlegend = FALSE)
plot
# Add Text
plot <- plot_ly(df_uk, x = df_uk$period, y = df_uk$total_sales, type = "scatter", text = "this is text") %>%
add_text(textposition = "top right") %>% layout(showlegend = FALSE)
plot
setwd("~/Dropbox (Emerald Core Games)/Droiduino Courses2/28. Data Visualization Using Plotly - Part 3")
library(dplyr)
library(readxl)
library(plotly)
## Importing Data
file <- "salesworkload_tabular.xlsx"
df <- read_xlsx(file)
View(df)
## Plotting Stacked Barchart
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region, `Store name`, period) %>% summarise(total_sales = sum(sales))
plot <- plot_ly(df_uk, x = ~period, y = ~total_sales, name = ~`Store name`) %>% layout(barmode = "stack")
plot
# Hide Legends
plot_legend <- plot %>% layout(showlegend = FALSE)
plot_legend
# Changing Legend Orientation
plot_legend <- plot %>% layout(legend = list(orientation = "h"))
plot_legend
# Legend Title
plot_legend <- plot %>% layout(legend = list(orientation = "v",title = list(text = "Store Name")))
plot_legend
# Scatter Plot : UK Sales 2009-2019
df_uk <- df %>% filter(Region == "United Kingdom") %>% group_by(Region,period) %>% summarise(total_sales = sum(sales))
plot <- plot_ly(df_uk, x = ~period, y = ~total_sales, type = "scatter")
plot
# Add text annotation
plot <- plot_ly(df_uk, x = ~period, y = ~total_sales, type = "scatter", text = "this is a text") %>%
add_text(textposition = "top right") %>% layout(showlegend = FALSE)
plot
